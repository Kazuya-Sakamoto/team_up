version: '3'
services:
  node:
    build:
      context: ./docker_files/node
    container_name: teamup_client
    ports:
      - '3000:3000'
    volumes:
      - ./client:/var/www/client
    environment:
      - NODE_ENV=development
    tty: true
    networks:
      - teamupnet
  db:
    build:
      context: ./docker_files/db_mysql
    container_name: teamup_db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    restart: on-failure:5
    ports:
      - '3306:3306'
    tty: true
    volumes:
      - ./docker_files/db_mysql/mysql_init:/docker-entrypoint-initdb.d
      - ./docker_files/db_mysql/mysql_data:/var/lib/mysql
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --skip-character-set-client-handshake
    networks:
      - teamupnet
  testdb:
    build:
      context: ./docker_files/db_mysql
    container_name: teamup_testdb
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    restart: on-failure:5
    ports:
      - '3307:3306'
    tty: true
    volumes:
      - ./docker_files/db_mysql/mysql_init:/docker-entrypoint-initdb.d
      - ./docker_files/db_mysql/mysql_data:/var/lib/mysql
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --skip-character-set-client-handshake
    networks:
      - teamupnet
  golang:
    build:
      context: ./docker_files/go
    container_name: teamup_server
    volumes:
      - '.:/go/src/app'
    ports:
      - '8080:8080'
    tty: true
    depends_on:
      - db
    networks:
      - teamupnet
networks:
  teamupnet:
